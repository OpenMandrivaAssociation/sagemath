diff -up sage-5.4.1/spkg/bin/sage.orig sage-5.4.1/spkg/bin/sage
--- sage-5.4.1/spkg/bin/sage.orig	2012-11-12 20:55:02.293833071 -0200
+++ sage-5.4.1/spkg/bin/sage	2012-11-12 21:04:54.375855744 -0200
@@ -11,17 +11,14 @@ usage() {
     echo "  file.<sage|py|spyx> -- run given .sage, .py or .spyx files"
     echo "  -advanced           -- list all command line options"
     echo "  -c <cmd>            -- Evaluates cmd as sage code"
-    echo "  -experimental       -- list all experimental packages that can be installed"
     echo "  -gap [...]          -- run Sage's Gap with given arguments"
     echo "  -gp [...]           -- run Sage's PARI/GP calculator with given arguments"
     echo "  -h, -?              -- print this help message"
-    echo "  -i [packages]       -- install the given Sage packages"
     echo "  -inotebook [...]    -- start the *insecure* Sage notebook"
     echo "  -maxima [...]       -- run Sage's Maxima with given arguments"
     echo "  -mwrank [...]       -- run Sage's mwrank with given arguments"
     echo "  -n, -notebook [...] -- start the Sage notebook (options are the same"
     echo "                         as for the notebook command in Sage)"
-    echo "  -optional           -- list all optional packages that can be installed"
     echo "  -python [...]       -- run the Python interpreter"
     echo "  -R [...]            -- run Sage's R with given arguments"
     echo "  -singular [...]     -- run Sage's singular with given arguments"
@@ -38,10 +35,8 @@ usage() {
     echo "                           -only-optional <tag1,...,tagn>  -- only run tests"
     echo "                            including one of the #optional tags"
     echo "                           -randorder[=seed]  -- randomize order of tests"
-    echo "  -upgrade [url]      -- download, build and install standard packages from"
-    echo "                         given url.  If url not given, automatically selects a"
-    echo "                         suitable mirror.  If url='ask', it lets you select"
-    echo "                         the mirror (uses SAGE_SERVER as default)."
+    echo "  -testall [options]  -- test all source files, docs, and examples.  options"
+    echo "                         like -t"
     echo "  -v, -version        -- print the Sage version"
     exit 0
 }
@@ -73,8 +68,6 @@ usage_advanced() {
     ####  1.......................26..................................................78
     ####  |.....................--.|...................................................|
     echo "Running the notebook:"
-    echo "  -bn, -build-and-notebook [...] -- build the Sage library then start"
-    echo "                         the Sage notebook"
     echo "  -inotebook [...]    -- start the *insecure* Sage notebook"
     echo "  -n, -notebook [...] -- start the Sage notebook (options are the same"
     echo "                         as for the notebook command in Sage)"
@@ -90,7 +83,6 @@ usage_advanced() {
     echo "  -gdb                -- run Sage under the control of gdb"
     echo "  -gdb-ipython        -- run Sage's IPython under the control of gdb"
     echo "  -gp [...]           -- run Sage's PARI/GP calculator with given arguments"
-    echo "  -hg [...]           -- run Sage's Mercurial with given arguments"
     echo "  -ipython [...]      -- run Sage's IPython using the default environment (not"
     echo "                         Sage), passing additional options to IPython"
     echo "  -kash [...]         -- run Sage's Kash with given arguments"
@@ -104,7 +96,6 @@ usage_advanced() {
     echo "  -mwrank [...]       -- run Sage's mwrank with given arguments"
     echo "  -python [...]       -- run the Python interpreter"
     echo "  -R [...]            -- run Sage's R with given arguments"
-    echo "  -scons [...]        -- run Sage's scons"
     echo "  -sh [...]           -- run \$SHELL ($SHELL) with Sage environment variables"
     echo "  -singular [...]     -- run Sage's singular with given arguments"
     echo "  -sqlite3 [...]      -- run Sage's sqlite3 with given arguments"
@@ -138,47 +129,10 @@ usage_advanced() {
     echo
     ####  1.......................26..................................................78
     ####  |.....................--.|...................................................|
-    echo "Building and testing the Sage library:"
-    echo "  -b [branch]         -- build Sage library.  If branch is given, switch to"
-    echo "                         branch in devel/sage-branch and build that branch"
-    echo "  -ba [branch]        -- same as -b and rebuild all Cython code"
-    echo "  -ba-force [branch]  -- same as -ba, but don't query before rebuilding"
-    echo "  -br [branch]        -- switch to, build, and run Sage given branch"
-    echo "  -branch             -- print the current Sage branch"
-    echo "  -bt [...]           -- build and test, options like -t below"
-    echo "  -btp <N> [...]      -- build and test parallel, options like -tp below"
-    echo "  -btnew [...]        -- build and test modified files, options like -tnew"
-    echo "  -clone [new branch] -- clone a new branch of the Sage library from the"
-    echo "                         current branch"
-    echo "  -fixdoctests <file.py> -- create <file.py>.out that would pass the doctests"
-    echo "                            and output a patch"
-    echo "  -startuptime [module]  -- display how long each component of Sage takes to"
-    echo "                            start up; optionally specify a module to get more"
-    echo "                            details about that particular module"
-    echo "  -t [options] <files|dir>"
-    echo "                      -- test examples in .py, .pyx, .sage or .tex files"
-    echo "                         options:"
-    echo "                           -long  -- include lines with the phrase 'long time'"
-    echo "                           -verbose  -- print debugging output during the test"
-    echo "                           -optional  -- also test all #optional examples"
-    echo "                           -only-optional <tag1,...,tagn>  -- only run tests"
-    echo "                            including one of the #optional tags"
-    echo "                           -randorder[=seed]  -- randomize order of tests"
-    echo "  -tnew [...]         -- like -t above, but only tests files modified since"
-    echo "                         last commit"
-    echo "  -tp <N> [...]       -- like -t above, but tests in parallel using N threads"
-    echo "                         with 0 interpreted as a sensible default"
-    echo "  -testall [options]  -- test all source files, docs, and examples.  options"
-    echo "                         like -t"
-
-    echo
-    ####  1.......................26..................................................78
-    ####  |.....................--.|...................................................|
     echo "Documentation:"
     echo "  -coverage <files>   -- give info about doctest coverage of files"
     echo "  -coverageall        -- give summary info about doctest coverage of all"
     echo "                         files in the Sage library"
-    echo "  -docbuild [lang/]<document> <html|pdf|...> -- Build the Sage documentation"
     echo "  -search_src <string> -- search through all the Sage library code for string"
     echo "  -search_doc <string> -- search through the Sage documentation for string"
     echo "  -grep <string>      -- same as -search_src"
@@ -196,23 +150,6 @@ usage_advanced() {
     echo
     ####  1.......................26..................................................78
     ####  |.....................--.|...................................................|
-    echo "Making Sage packages or distributions:"
-    echo "  -bdist VER          -- build a binary distribution of Sage"
-    echo "  -combinat [...]     -- run sage-combinat patch management script"
-    echo "  -crap sage-ver.tar  -- detect suspicious garbage in sage source tarball"
-   #echo "  -ldist VER          -- build a library Sage distribution (for install into"
-   #echo "                         existing Python)"
-    echo "  -log                -- add entry to <SAGE_ROOT>/changelog.txt"
-    echo "  -merge              -- run Sage's automatic merge and test script"
-    echo "  -pkg <dir>          -- create Sage package dir.spkg from a given directory"
-    echo "  -pkg_nc <dir>       -- as -pkg, but do not compress the package"
-    echo "  -rsyncdist VER      -- build an rsyncable source distribution of Sage (you"
-    echo "                         must first run sage -sdist VER for this to work)"
-    echo "  -sdist VER          -- build a source distribution of Sage"
-
-    echo
-    ####  1.......................26..................................................78
-    ####  |.....................--.|...................................................|
     echo "Valgrind memory debugging:"
     echo "  -cachegrind         -- run Sage using Valgrind's cachegrind tool.  The log"
     echo "                         files are named sage-cachegrind.PID can be found in"
@@ -226,9 +163,6 @@ usage_advanced() {
     echo "  -memcheck           -- run Sage using Valgrind's memcheck tool.  The log"
     echo "                         files are named sage-memcheck.PID can be found in"
     echo "                         $DOT_SAGE"
-    echo "  -omega              -- run Sage using Valgrind's omega tool.  The log"
-    echo "                         files are named sage-omega.PID can be found in"
-    echo "                         $DOT_SAGE"
     echo "  -valgrind           -- this is an alias for -memcheck"
     echo
     echo "You can also use -- before a long option, e.g., 'sage --optional'."
@@ -248,15 +182,6 @@ if [ "$1" = '--nodotsage' ]; then
     exit $status
 fi
 
-# Do NOT redirect stderr and stdout to /dev/null,
-# since sage-env might print important error messages:
-. "$SAGE_ROOT/spkg/bin/sage-env"
-if [ $? -ne 0 ]; then
-   echo >&2 "Error setting environment variables by sourcing '$SAGE_ROOT/spkg/bin/sage-env';"
-   echo >&2 "possibly contact sage-devel (see http://groups.google.com/group/sage-devel)."
-   exit 1
-fi
-
 # Sage startup script passes some funny options, which are
 # best ignored.
 if [ $# -eq 3 ]; then
@@ -277,7 +202,7 @@ if [ $# -gt 0 ]; then
 fi
 
 
-LOGFILE="$SAGE_ROOT/sage.log"
+LOGFILE="$DOT_SAGE/sage.log"
 LOGOPT=""
 
 sage_setup() {
@@ -286,10 +211,6 @@ sage_setup() {
         cat "$SAGE_LOCAL/bin/sage-banner"
     fi
 
-    # Check to see if the whole Sage install tree has moved.
-    # If so, change various hardcoded paths.
-    sage-location || exit $?
-
     export IPYTHONDIR="$DOT_SAGE/ipython"
     export IPYTHONRC="ipythonrc"
     if [ ! -d "$IPYTHONDIR" ]; then
@@ -344,12 +265,6 @@ if [ "$1" = '-root'  -o "$1" = '--root'
     exit 0
 fi
 
-if [ "$1" = '-branch'  -o "$1" = '--branch' ]; then
-    cd "$SAGE_ROOT/devel/sage"
-    pwd -P | sed 's|.*/||; s|^sage-||'
-    exit $?
-fi
-
 #####################################################################
 # Run Sage's versions of the standard Algebra/Geometry etc. software
 #####################################################################
@@ -360,33 +275,27 @@ if [ "$1" = '-axiom' -o "$1" = '--axiom'
     exit $?
 fi
 
-if [ "$1" = '-combinat' -o "$1" = '--combinat' ]; then
-    shift
-    sage-combinat "$@"
-    exit $?
-fi
-
 if [ "$1" = '-gap' -o "$1" = '--gap' ]; then
     shift
-    "$SAGE_LOCAL/bin/gap" "$@"
+    gap "$@"
     exit $?
 fi
 
 if [ "$1" = '-gp'  -o "$1" = '--gp' ]; then
     shift
-    "$SAGE_LOCAL/bin/gp" "$@"
+    gp "$@"
     exit $?
 fi
 
 if [ "$1" = '-singular'  -o "$1" = '--singular' ]; then
     shift
-    "$SAGE_LOCAL/bin/singular" "$@"
+    singular "$@"
     exit $?
 fi
 
 if [ "$1" = '-sqlite3'  -o "$1" = '--sqlite3' ]; then
     shift
-    "$SAGE_LOCAL/bin/sqlite3" "$@"
+    sqlite3 "$@"
     exit $?
 fi
 
@@ -398,49 +307,37 @@ fi
 
 if [ "$1" = '-ecl'  -o "$1" = '--ecl' ]; then
     shift
-    "$SAGE_LOCAL/bin/ecl" "$@"
+    ecl "$@"
     exit $?
 fi
 
 if [ "$1" = '-lisp'  -o "$1" = '--lisp' ]; then
     shift
-    "$SAGE_LOCAL/bin/ecl" "$@"
+    ecl "$@"
     exit $?
 fi
 
 if [ "$1" = '-kash'  -o "$1" = '--kash' ]; then
     shift
-    "$SAGE_LOCAL/bin/kash" "$@"
-    exit $?
-fi
-
-if [ "$1" = '-fixdoctests' -o "$1" = '--fixdoctests' ]; then
-    shift
-    sage-fixdoctests "$@"
+    kash "$@"
     exit $?
 fi
 
 if [ "$1" = '-maxima'  -o "$1" = '--maxima' ]; then
     shift
-    "$SAGE_LOCAL/bin/maxima" "$@"
+    maxima "$@"
     exit $?
 fi
 
 if [ "$1" = '-mwrank'  -o "$1" = '--mwrank' ]; then
     shift
-    "$SAGE_LOCAL/bin/mwrank" "$@"
+    mwrank "$@"
     exit $?
 fi
 
 if [ "$1" = '-M2'  -o "$1" = '--M2' ]; then
     shift
-    "$SAGE_LOCAL/bin/M2" "$@"
-    exit $?
-fi
-
-if [ "$1" = '-scons'  -o "$1" = '--scons' ]; then
-    shift
-    "$SAGE_LOCAL/bin/scons" "$@"
+    M2 "$@"
     exit $?
 fi
 
@@ -452,7 +349,7 @@ fi
 
 if [ "$1" = '-R'  -o "$1" = '--R' ]; then
     shift
-    "$SAGE_LOCAL/bin/R" "$@"
+    R "$@"
     exit $?
 fi
 
@@ -586,21 +483,6 @@ if [ "$1" = '-gdb-ipython'  -o "$1" = '-
     exit $?
 fi
 
-if [ "$1" = '-hg'  -o "$1" = '--hg' ]; then
-    shift
-    # Disable HGPLAIN, so we use all user defaults
-    # (both in $SAGE_LOCAL/etc/mercurial and $HOME/.hgrc)
-    unset HGPLAIN
-    "$SAGE_LOCAL/bin/hg" "$@"
-    exit $?
-fi
-
-if [ "$1" = '-merge' ]; then
-    shift
-    sage-apply-ticket "$@"
-    exit $?
-fi
-
 #####################################################################
 # Test coverage of a module?
 #####################################################################
@@ -634,23 +516,9 @@ if [ "$1" = '-rst2sws' -o "$1" = '--rst2
 fi
 
 #####################################################################
-# Crap
-#####################################################################
-
-if [ "$1" = "-crap" -o "$1" = "--crap" ]; then
-   shift
-   sage-crap $@
-   exit $?
-fi
-
-#####################################################################
 # Run Sage's versions of the standard Algebra/Geometry etc. software
 #####################################################################
 
-build_sage() {
-    sage-build "$@" || exit $?
-}
-
 if [ "$1" = "-notebook"  -o "$1" = '--notebook' -o "$1" = '-n' ]; then
    shift
    sage-cleaner &>/dev/null &
@@ -658,14 +526,6 @@ if [ "$1" = "-notebook"  -o "$1" = '--no
    exit $?
 fi
 
-if [ "$1" = "-bn" -o "$1" = "--build-and-notebook" ]; then
-    shift
-    sage-cleaner &>/dev/null &
-    build_sage
-    sage-notebook "$@"
-    exit $?
-fi
-
 if [ "$1" = "-inotebook"  -o "$1" = '--inotebook' ]; then
    shift
    sage-cleaner &>/dev/null &
@@ -708,76 +568,7 @@ if [ "$1" = '-b' ]; then
     exit $?
 fi
 
-if [ "$1" = '-br' -o "$1" = "--br" ]; then
-    shift
-    build_sage "$@"
-    sage
-    exit $?
-fi
-
-if [ "$1" = '-r' ]; then
-   shift
-   if [ "$1" != "" ]; then
-      cd "$SAGE_ROOT/devel/"
-      if [ ! -d "sage-$1" ]; then
-         echo >&2 "No such branch '$SAGE_ROOT/devel/sage-$1'"
-         echo >&2 "Use 'sage -clone' to create a new branch."
-         exit 1
-      fi
-      # On Solaris (and perhaps other systems), "ln -snf FILE LINK"
-      # doesn't remove LINK and then relink it, so we need to first
-      # delete LINK -- in this case, SAGE_ROOT/devel/sage -- and then
-      # create a new link.  We use the full path name to make sure we
-      # remove the correct file.
-      rm -f "$SAGE_ROOT/devel/sage"
-      ln -s "sage-$1" sage
-   fi
-   sage
-   exit $?
-fi
-
-if [ "$1" = '-ba' ]; then
-   shift
-   echo " *** WARNING ***"
-   echo " You are about to rebuild the entire Sage library."
-   echo " This will take a significant amount of time."
-   echo " (Use -ba-force instead of -ba to skip this prompt.)"
-   echo -n " Do you want to proceed? [y/n] "
-   read CHOICE
-   while [ "$CHOICE" != "y" -a "$CHOICE" != "n" ]; do
-	   echo -n " Choose one of y, n: "
-	   read CHOICE
-   done
-   if [ $CHOICE = 'n' ]; then
-	   exit 0
-   fi
-   build_sage -b "$@"
-   exit $?
-fi
-
-if [ "$1" = '-ba-force' ]; then
-   shift
-   build_sage -b "$@"
-   exit $?
-fi
-
-if [ "$1" = '-sync-build' -o "$1" = '--sync-build' ]; then
-   shift
-   cd "$SAGE_ROOT"
-   python "$SAGE_LOCAL"/bin/sage-sync-build.py "$@"
-   exit $?
-fi
-
-if [ "$1" = '-clone' -o "$1" = "--clone" ]; then
-   shift
-   time sage-clone "$@"
-   exit $?
-fi
-
-if [ "$1" = '-t' -o "$1" = '-bt' ]; then
-   if [ "$1" = '-bt' ]; then
-      build_sage
-   fi
+if [ "$1" = '-t' ]; then
    if ! [  -f  "$DOT_SAGE"/init.sage ]; then
       echo >&2 "init.sage does not exist ... creating"
       touch "$DOT_SAGE"/init.sage
@@ -787,10 +578,7 @@ if [ "$1" = '-t' -o "$1" = '-bt' ]; then
    exit $?
 fi
 
-if [ "$1" = '-tp' -o "$1" = '-btp' ]; then
-   if [ "$1" = '-btp' ]; then
-      build_sage
-   fi
+if [ "$1" = '-tp' ]; then
    if ! [  -f  "$DOT_SAGE"/init.sage ]; then
       echo >&2 "init.sage does not exist ... creating"
       touch "$DOT_SAGE"/init.sage
@@ -800,10 +588,7 @@ if [ "$1" = '-tp' -o "$1" = '-btp' ]; th
    exit $?
 fi
 
-if [ "$1" = '-tnew' -o "$1" = '-btnew' ]; then
-   if [ "$1" = '-btnew' ]; then
-      build_sage
-   fi
+if [ "$1" = '-tnew' ]; then
    shift
    sage-test-new "$@"
    exit $?
@@ -815,13 +600,6 @@ if [ "$1" = '-testall' -o "$1" = "--test
    exit $?
 fi
 
-if [ "$1" = '-patchbot' -o "$1" = "--patchbot" ]; then
-   shift
-   cd "$SAGE_ROOT"
-   "$SAGE_LOCAL/bin/patchbot/patchbot.py" "$@"
-   exit $?
-fi
-
 if [ "$1" = '-c' ]; then
    shift
    SAGE_BANNER="no"
@@ -831,172 +609,6 @@ if [ "$1" = '-c' ]; then
    exit $?
 fi
 
-install() {
-    mkdir -p "$SAGE_LOGS"
-    for PKG in "$@"
-    do
-        # Check for options
-        case "$PKG" in
-            -f) OPTF="-f"
-                continue;;
-            -m) OPTS="-s"
-                echo >&2 "Warning: the -m option is deprecated since Sage 5.0.  Use -s instead."
-                continue;;
-            -s) OPTS="-s"
-                continue;;
-            -c) OPTC="-c"
-                continue;;
-            --check) OPTC="-c"
-                continue;;
-            -info) OPTINFO="--info"
-                continue;;
-            --info) OPTINFO="--info"
-                continue;;
-            -*) echo >&2 "Error: unknown option '$PKG'"
-                exit 2;;
-        esac
-
-        PKG_NAME=`echo "$PKG" | sed -e "s/\.spkg$//"`
-        PKG_NAME=`basename "$PKG_NAME"`
-
-        "$SAGE_ROOT"/spkg/pipestatus \
-            "sage-spkg $OPTINFO $OPTF $OPTS $OPTC '$PKG' 2>&1" \
-            "(trap '' SIGINT; tee -a '$SAGE_ROOT/install.log' '$SAGE_LOGS/$PKG_NAME.log')"
-        # Do not try to install further packages if one failed
-        if [ $? -ne 0 ]; then
-            exit 1
-        fi
-    done
-    exit 0
-}
-
-if [ "$1" = '-optional' -o "$1" = "--optional" ]; then
-   sage-list-optional
-   exit 0
-fi
-
-if [ "$1" = '-experimental' -o "$1" = "--experimental" ]; then
-   sage-list-experimental
-   exit 0
-fi
-
-if [ "$1" = '-standard' -o "$1" = "--standard" ]; then
-   sage-list-standard
-   exit 0
-fi
-
-if [ "$1" = '-i' ]; then
-    shift
-    # If there are no further arguments, simply list all installed
-    # packages.
-    if [ $# -eq 0 ]; then
-        exec sage-spkg
-    fi
-    install "$@"
-fi
-
-if [ "$1" = '-f' ]; then
-    shift
-    # If there are no further arguments, simply list all installed
-    # packages.
-    if [ $# -eq 0 ]; then
-        exec sage-spkg
-    fi
-    install -f "$@"
-fi
-
-if [ "$1" = '-info' -o "$1" = '--info' ]; then
-    shift
-    # If there are no further arguments, simply list all installed
-    # packages.
-    if [ $# -eq 0 ]; then
-        exec sage-spkg
-    fi
-    install --info "$@"
-fi
-
-if [ "$1" = '-pkg' -o "$1" = '-spkg' -o "$1" = "--pkg" -o "$1" = "--spkg" ]; then
-   shift
-   sage-pkg "$@"
-   exit $?
-fi
-
-if [ "$1" = '-pkg_nc' -o "$1" = "--pkg_nc" ]; then
-   shift
-   sage-pkg -n "$@"
-   exit $?
-fi
-
-if [ "$1" = '-sdist' -o "$1" = "--sdist" ]; then
-   if [ $# -ne 2 ]; then
-       echo >&2 "** MISSING VERSION NUMBER! **"
-       exit 1
-   fi
-   sage-sdist $2 "$SAGE_ROOT"
-   exit $?
-fi
-
-if [ "$1" = '-rsyncdist' -o "$1" = "--rsyncdist" ]; then
-   if [ $# -ne 2 ]; then
-       echo >&2 "** MISSING VERSION NUMBER! **"
-       exit 1
-   fi
-   sage-rsyncdist $2
-   exit $?
-fi
-
-if [ "$1" = '-bdist' -o "$1" = "--bdist" ]; then
-   if [ $# -ne 2 ]; then
-       echo >&2 "** MISSING VERSION NUMBER! **"
-       exit 1
-   fi
-   cd "$SAGE_ROOT"
-   sage-bdist $2 "$SAGE_ROOT"
-   exit $?
-fi
-
-#if [ "$1" = '-update' ]; then
-#    sage-update
-#    exit $?
-#fi
-
-#if [ "$1" = '-update-build' -o "$1" = "--update-build" ]; then
-#    sage-update-build
-#    sage-update-build
-#    exit $?
-#fi
-
-if [ "$1" = '-upgrade' -o "$1" = "--upgrade" ]; then
-    shift
-    cd "$SAGE_ROOT"
-
-    # People often move the Sage install right before doing the upgrade, so it's
-    # important to fix any path hardcoding issues first, or certain library
-    # links will fail.
-    sage-location
-
-    # Run sage-upgrade twice since when installing sage-scripts and a
-    # running script changes, it gets confused and exits with an error.
-    # Running again (with the script replaced) then fixes the problem.
-    sage-upgrade "$@"
-    if [ $? -eq 2 ]; then   # this exit code means the user elected not to do the upgrade at all.
-        exit 2
-    fi
-    echo "Double checking that all packages have been installed."
-    sage-upgrade "$@" || exit $?
-
-    # Check that Sage still works
-    sage-starts
-    exit $?
-fi
-
-if [ "$1" = "-docbuild" -o "$1" = "--docbuild" ]; then
-   shift
-   python "$SAGE_ROOT"/devel/sage/doc/common/builder.py $@
-   exit $?
-fi
-
-
 if [ "$1" = '-gdb' -o "$1" = "--gdb" ]; then
     sage_setup
     sage-gdb
@@ -1039,12 +651,6 @@ if [ "$1" = '-callgrind' -o "$1" = "--ca
     exit $?
 fi
 
-if [ "$1" = '-omega' -o "$1" = "--omega" ]; then
-    sage_setup
-    sage-omega
-    exit $?
-fi
-
 if [ "$1" = '-startuptime' -o "$1" = '--startuptime' ]; then
     python "$SAGE_LOCAL"/bin/sage-startuptime.py $@
     exit $?
diff -up sage-5.4.1/spkg/build/sage_scripts-5.4.1/ipy_profile_sage.py.orig sage-5.4.1/spkg/build/sage_scripts-5.4.1/ipy_profile_sage.py
--- sage-5.4.1/spkg/build/sage_scripts-5.4.1/ipy_profile_sage.py.orig	2012-11-12 21:05:05.086856154 -0200
+++ sage-5.4.1/spkg/build/sage_scripts-5.4.1/ipy_profile_sage.py	2012-11-12 21:05:13.414856473 -0200
@@ -12,10 +12,6 @@ if 'SAGE_CLEAN' not in os.environ:
     
     from sage.misc.interpreter import attached_files 
 
-    branch = sage.misc.misc.branch_current_hg_notice(sage.misc.misc.branch_current_hg())
-    if branch:
-        print branch
-
     if not os.environ.has_key('SAGE_IMPORTALL') or os.environ['SAGE_IMPORTALL'] != "no":
         _ip.ex('from sage.all_cmdline import *')
 	
diff -up sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-doctest.orig sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-doctest
--- sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-doctest.orig	2012-11-12 21:05:28.963857069 -0200
+++ sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-doctest	2012-11-12 21:06:27.527859311 -0200
@@ -90,11 +90,6 @@ def delete_tmpfiles():
 # Set environment variables
 ######################################################    
 SAGE_ROOT = os.environ["SAGE_ROOT"]
-LD = os.environ["LD_LIBRARY_PATH"]
-os.environ["LD_LIBRARY_PATH"] = os.path.join(SAGE_ROOT, 'local',
-                                             'lib') + ":" + LD
-os.environ["PYTHONPATH"] = os.path.join(SAGE_ROOT, 'local', 'lib', 'python',
-                                        'site-packages')
 if os.environ.has_key('SAGE_PATH'):
     os.environ["PYTHONPATH"] = os.environ["PYTHONPATH"] + ':' + os.environ['SAGE_PATH']
 
@@ -125,11 +120,6 @@ try:
 except:
     SAGE_CALLGRIND_FLAGS = logfile % 'cachegrind.%p'
 
-try:
-    SAGE_OMEGA_FLAGS = os.environ['SAGE_OMEGA_FLAGS']
-except:
-    SAGE_OMEGA_FLAGS = logfile % 'omega.%p'
-
 ######################################################
 # The Python binary
 ######################################################
@@ -785,8 +775,6 @@ def test_file(file, library_code):
             cmd = "valgrind --tool=massif " + SAGE_MASSIF_FLAGS + cmd
         if cachegrind:
             cmd = "valgrind --tool=cachegrind " +  SAGE_CACHEGRIND_FLAGS + cmd
-        if omega:
-            cmd = "valgrind --tool=exp-omega " + SAGE_OMEGA_FLAGS + cmd
 
         VALGRIND = os.path.join(DOT_SAGE, 'valgrind')
         try:
@@ -940,13 +928,12 @@ if __name__ ==  '__main__':
         memcheck   = has_opt('memcheck') or has_opt('valgrind')
         massif     = has_opt('massif')
         cachegrind = has_opt('cachegrind')
-        omega      = has_opt('omega')
         force_lib  = has_opt('force_lib')
         random_order = parse_rand()
         only_optional, only_optional_tags = parse_only_opt()
         if long_time:
             TIMEOUT = TIMEOUT_LONG
-        if gdb or memcheck or massif or cachegrind or omega:
+        if gdb or memcheck or massif or cachegrind:
             TIMEOUT = TIMEOUT_VALGRIND
         if argv[1][0] == '-':
             usage()
@@ -954,7 +941,7 @@ if __name__ ==  '__main__':
         ext = os.path.splitext(argv[1])[1]
 
         library_code = True
-        dev_path = os.path.realpath(os.path.join(SAGE_ROOT, 'devel'))
+        dev_path = os.path.realpath(os.environ['SAGE_DEVEL'] + '/sage')
         our_path = os.path.realpath(argv[1])
 
         if not force_lib and (ext in ['.spyx', '.sage'] or
diff -up sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-maketest.orig sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-maketest
--- sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-maketest.orig	2012-11-12 21:06:44.381859957 -0200
+++ sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-maketest	2012-11-12 21:07:22.102861401 -0200
@@ -1,7 +1,7 @@
 #!/usr/bin/env bash
 
 if [ -z "$SAGE_TESTDIR" -a -n "$SAGE_ROOT" ]; then
-    SAGE_TESTDIR="$SAGE_ROOT"/tmp
+    SAGE_TESTDIR="$DOT_SAGE"/tmp
 fi
 mkdir -p "$SAGE_TESTDIR"
 SAGE_TEST_LOG="$SAGE_TESTDIR/test.log"
@@ -16,10 +16,10 @@ echo `date` >> "$SAGE_TEST_LOG"
 # whose names consist of two lowercase letters: those should match the
 # various languages.
 
-"$SAGE_ROOT"/sage -t --sagenb "$@" \
-    "$SAGE_ROOT"/devel/sage/doc/common \
-    "$SAGE_ROOT"/devel/sage/doc/[a-z][a-z] \
-    "$SAGE_ROOT"/devel/sage/sage 2>&1 | tee -a "$SAGE_TEST_LOG"
+sage -t --sagenb "$@" \
+    devel/sage/doc/common \
+    devel/sage/doc/[a-z][a-z] \
+    devel/sage/sage 2>&1 | tee -a "$SAGE_TEST_LOG"
 
 if [ "$SAGE_TESTDIR" = "$SAGE_ROOT/tmp" ]; then
     cat "$SAGE_TEST_LOG" >> "$SAGE_ROOT"/test.log
diff -up sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-valgrind.orig sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-valgrind
--- sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-valgrind.orig	2012-11-12 21:07:43.350862215 -0200
+++ sage-5.4.1/spkg/build/sage_scripts-5.4.1/sage-valgrind	2012-11-12 21:07:54.478862641 -0200
@@ -11,7 +11,7 @@ fi
 LOG="$DOT_SAGE"/valgrind/sage-memcheck.%p
 echo "Log file is $LOG"
 
-MEMCHECK_FLAGS="--leak-resolution=high --log-file=$LOG --leak-check=full --num-callers=25 --suppressions=$SAGE_LOCAL/lib/valgrind/sage.supp "; export MEMCHECK_FLAGS
+MEMCHECK_FLAGS="--leak-resolution=high --log-file=$LOG --leak-check=full --num-callers=25 "; export MEMCHECK_FLAGS
 if [ "$SAGE_MEMCHECK_FLAGS" ]; then
     echo "Overwriting memcheck flags with:"
     echo $SAGE_MEMCHECK_FLAGS
