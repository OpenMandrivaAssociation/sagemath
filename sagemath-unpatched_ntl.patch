diff -up sage-5.6/spkg/build/sage-5.6/c_lib/include/ntl_wrap.h.orig sage-5.6/spkg/build/sage-5.6/c_lib/include/ntl_wrap.h
--- sage-5.6/spkg/build/sage-5.6/c_lib/include/ntl_wrap.h.orig	2013-01-25 21:54:01.313110341 -0200
+++ sage-5.6/spkg/build/sage-5.6/c_lib/include/ntl_wrap.h	2013-01-25 21:54:13.153110794 -0200
@@ -35,8 +35,6 @@ using namespace NTL;
 
 EXTERN void del_charstar(char*);
 
-EXTERN void setup_NTL_error_callback(void (*function)(const char*, void*), void* context);
-
 ////////  ZZ //////////
 
 #ifndef __cplusplus
diff -up sage-5.6/spkg/build/sage-5.6/c_lib/src/ntl_wrap.cpp.orig sage-5.6/spkg/build/sage-5.6/c_lib/src/ntl_wrap.cpp
--- sage-5.6/spkg/build/sage-5.6/c_lib/src/ntl_wrap.cpp.orig	2013-01-25 21:53:32.800109249 -0200
+++ sage-5.6/spkg/build/sage-5.6/c_lib/src/ntl_wrap.cpp	2013-01-25 21:53:49.625109893 -0200
@@ -11,13 +11,6 @@ void del_charstar(char* a) {
     delete[] a;
 }
 
-
-void setup_NTL_error_callback(void (*function)(const char*, void*), void* context)
-{
-    NTL::SetErrorCallbackFunction(function, context);
-}
-
-
 //////// ZZ //////////
 
 /* Return value is only valid if the result should fit into an int.
diff -up sage-5.6/spkg/build/sage-5.6/c_lib/src/stdsage.c.orig sage-5.6/spkg/build/sage-5.6/c_lib/src/stdsage.c
--- sage-5.6/spkg/build/sage-5.6/c_lib/src/stdsage.c.orig	2013-01-25 21:54:34.072111596 -0200
+++ sage-5.6/spkg/build/sage-5.6/c_lib/src/stdsage.c	2013-01-25 21:54:49.832112199 -0200
@@ -29,27 +29,12 @@ void init_global_empty_tuple(void) {
   global_empty_tuple = PyTuple_New(0);
 }
 
-
-/*
-  This function gets called whenever NTL calls Error().
-  s is the error message generated by NTL.
-  We just copy the error message into a global buffer, and then abort() to run
-  the usual interrupt machinery.
- */
-void global_NTL_error_callback(const char* s, void* context)
-{
-    set_sage_signal_handler_message(s);
-    abort();
-}
-
-
 /* This is called once during Sage startup. On some platforms like
  * Cygwin, this is also called from init_csage_module(). */
 void init_csage() {
     init_global_empty_tuple();
     init_memory_functions();
     setup_sage_signal_handler();
-    setup_NTL_error_callback(global_NTL_error_callback, NULL);
 }
 
 /* This is called once for every single module that links in stdsage */
