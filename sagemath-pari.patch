diff -up sage-5.13/spkg/build/sage-5.13/sage/interfaces/gp.py.orig sage-5.13/spkg/build/sage-5.13/sage/interfaces/gp.py
--- sage-5.13/spkg/build/sage-5.13/sage/interfaces/gp.py.orig	2014-01-28 16:06:59.279200475 -0200
+++ sage-5.13/spkg/build/sage-5.13/sage/interfaces/gp.py	2014-01-28 16:07:36.218201890 -0200
@@ -977,11 +977,11 @@ def is_GpElement(x):
     """
     return isinstance(x, GpElement)
 
-from sage.env import DOT_SAGE, SAGE_LOCAL
+from sage.env import DOT_SAGE, SAGE_EXTCODE
 import os
 
-# Set GPRC environment variable to $SAGE_LOCAL/etc/gprc.expect
-os.environ["GPRC"] = os.path.join(SAGE_LOCAL, 'etc', 'gprc.expect')
+# Set GPRC environment variable to $SAGE_EXTCODE/pari/gprc.expect
+os.environ["GPRC"] = '%s/pari/gprc.expect'%SAGE_EXTCODE
 
 # An instance
 gp = Gp(logfile=os.path.join(DOT_SAGE,'gp-expect.log')) # useful for debugging!
diff -up sage-5.13/spkg/build/sage-5.13/sage/libs/pari/gen.pyx.orig sage-5.13/spkg/build/sage-5.13/sage/libs/pari/gen.pyx
--- sage-5.13/spkg/build/sage-5.13/sage/libs/pari/gen.pyx.orig	2014-01-28 16:07:00.806200534 -0200
+++ sage-5.13/spkg/build/sage-5.13/sage/libs/pari/gen.pyx	2014-01-28 16:08:42.169204415 -0200
@@ -194,6 +194,10 @@ cdef extern from "misc.h":
 cdef extern from "mpz_pylong.h":
     cdef int mpz_set_pylong(mpz_t dst, src) except -1
 
+cdef extern from "gmp.h":
+    cdef void mp_get_memory_functions(void**, void**, void**)
+    cdef void mp_set_memory_functions(void*, void*, void*)
+
 # Will be imported as needed
 Integer = None
 
@@ -9319,7 +9323,12 @@ cdef class PariInstance(sage.structure.p
         # The size here doesn't really matter, because we will allocate
         # our own stack anyway. We ask PARI not to set up signal and
         # error handlers.
+        cdef void *_gmp_malloc
+        cdef void *_gmp_realloc
+        cdef void *_gmp_free
+        mp_get_memory_functions(&_gmp_malloc, &_gmp_realloc, &_gmp_free)
         pari_init_opts(10000, maxprime, INIT_DFTm)
+        mp_set_memory_functions(_gmp_malloc, _gmp_realloc, _gmp_free)
 
         _pari_init_error_handling()
 
